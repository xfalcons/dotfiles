[init]
  templatedir = ~/.git_template
[push]
  default = current
[color]
  ui = auto
[alias]
  aa = add --all
  ap = add --patch
  ca = commit --amend
  ci = commit -v
  co = checkout
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  ctags = "!sh -c '[ -f .git/hooks/ctags ] || git init; .git/hooks/ctags' git-ctags"
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  pr = !hub pull-request
  st = status
  up = !git fetch origin && git rebase origin/master
  br = branch
  branchdiff = !sh -c \"git diff `git oldest-ancestor`..\"
  branchlog = !sh -c \"git log `git oldest-ancestor`..\"
  diverges = !zsh -c 'git rev-list --boundary $1...$2 | grep ^- | cut -c2-'
  merge = merge --no-ff
  pull = pull --no-ff
  oneline = log --pretty=oneline
  logdate = log --pretty=format:'%ad %h %aN %s';echo
  la = log --pretty=\"format:%ad %h (%an): %s \" --date=short
  lad = log --pretty=format:'%Cgreen[%ad]%Creset %C(yellow)%h%Creset %C(bold blue)(%an)%Creset %s ' --date=short
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  sh = diff-tree --no-commit-id --name-only -r

[core]
  excludesfile = ~/.gitignore
  autocrlf = input
[merge]
  ff = only
[include]
  path = .gitconfig.local
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
#[diff]
#  color = auto
#  external = ~/dotfiles/bin/git_diff_wrapper
